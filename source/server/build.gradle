plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'info.solidsoft.pitest' version '1.15.0'
    id "com.dorongold.task-tree" version "1.5"
}

group = 'org.mypetri'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}





test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        showCauses true
        showStackTraces true
        
        // Don't show standardOut/standardError in console
        // events "passed", "skipped", "failed", "standardOut", "standardError"
        
        info {
            events "started", "passed", "skipped", "failed"
            displayGranularity 2
            showExceptions true
            showCauses true
            showStackTraces true
        }
        
        exceptionFormat = 'full'
    }
    
    // Enable colored output
    systemProperty 'spring.output.ansi.enabled', 'always'
    
    // Redirect Spring logs to files
    systemProperty 'logging.file.name', 'build/test-spring.log'
    systemProperty 'logging.level.org.springframework.web', 'INFO'
    systemProperty 'logging.level.org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver', 'ERROR'
    systemProperty 'logging.level.org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver', 'ERROR'
    
    // Capture test output to separate files
    outputs.dir file("build/test-outputs")
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
        }
    }
}
clean {
    delete '../client/dist'
    delete fileTree(dir: 'src/main/resources/static', exclude: '.gitkeep')
}


pitest {
    junit5PluginVersion = '1.2.1'
    pitestVersion = '1.15.2'
    verbose = true
    targetClasses = ['org.petrinet.*']
    targetTests = ['org.petrinet.*']
    mutators = ['ALL']
}
